<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "load".
 *
 * @property integer $id
 * @property integer $booked_by
 * @property string $bill
 * @property integer $bill_to
 * @property string $customer_reference
 * @property string $notes
 * @property string $received
 * @property string $release
 * @property integer $office_id
 * @property integer $type_id
 * @property string $trailer_type
 * @property string $seal_no
 * @property integer $salesman
 * @property string $status
 * @property string $rate_source
 * @property string $rate_by
 * @property string $rate
 * @property string $units
 * @property string $discount_percent
 * @property integer $commodity_commodity_id
 * @property string $commodity_reference
 * @property integer $commodity_weight
 * @property string $commodity_pieces
 * @property string $commodity_space
 * @property string $arrived_date
 * @property string $arrived_time_in
 * @property string $arrived_time_out
 * @property string $signed_for_by
 * @property string $invoice_date
 * @property boolean $scans
 * @property boolean $hold_billing
 * @property string $rating_matrix_id
 * @property integer $updated_by
 * @property string $updated_at
 * @property integer $created_by
 * @property string $created_at
 *
 * @property \common\models\ChatMessage[] $chatMessages
 * @property \common\models\DispatchAssignment $dispatchAssignment
 * @property \common\models\Document[] $documents
 * @property \common\models\Commodity $commodityCommodity
 * @property \common\models\Customer $billTo
 * @property \common\models\LoadRatingMatrix $ratingMatrix
 * @property \common\models\LoadType $type
 * @property \common\models\Office $office
 * @property \common\models\TrailerType $trailerType
 * @property \common\models\User $bookedBy
 * @property \common\models\User $updatedBy
 * @property \common\models\User $createdBy
 * @property \common\models\LoadAccessories[] $loadAccessories
 * @property \common\models\LoadDrop[] $loadDrops
 * @property \common\models\LoadMovement[] $loadMovements
 * @property \common\models\LoadNote[] $loadNotes
 * @property \common\models\LoadStop[] $loadStops
 * @property \common\models\PayrollAdjustment[] $payrollAdjustments
 * @property \common\models\PayrollPay[] $payrollPays
 * @property string $aliasModel
 */
abstract class Load extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'load';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
            ],
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['booked_by', 'bill_to', 'office_id', 'type_id', 'salesman', 'commodity_commodity_id', 'commodity_weight'], 'default', 'value' => null],
            [['booked_by', 'bill_to', 'office_id', 'type_id', 'salesman', 'commodity_commodity_id', 'commodity_weight'], 'integer'],
            [['notes'], 'string'],
            [['received', 'release', 'arrived_date', 'arrived_time_in', 'arrived_time_out', 'invoice_date'], 'safe'],
            [['rate', 'units', 'discount_percent', 'commodity_pieces', 'commodity_space'], 'number'],
            [['scans', 'hold_billing'], 'boolean'],
            [['bill', 'customer_reference', 'trailer_type', 'seal_no', 'status', 'commodity_reference', 'signed_for_by'], 'string', 'max' => 255],
            [['rate_source'], 'string', 'max' => 20],
            [['rate_by'], 'string', 'max' => 10],
            [['rating_matrix_id'], 'string', 'max' => 5],
            [['commodity_commodity_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Commodity::className(), 'targetAttribute' => ['commodity_commodity_id' => 'id']],
            [['bill_to'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Customer::className(), 'targetAttribute' => ['bill_to' => 'id']],
            [['rating_matrix_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\LoadRatingMatrix::className(), 'targetAttribute' => ['rating_matrix_id' => 'number']],
            [['type_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\LoadType::className(), 'targetAttribute' => ['type_id' => 'id']],
            [['office_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Office::className(), 'targetAttribute' => ['office_id' => 'id']],
            [['trailer_type'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\TrailerType::className(), 'targetAttribute' => ['trailer_type' => 'type']],
            [['booked_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['booked_by' => 'id']],
            [['updated_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['updated_by' => 'id']],
            [['created_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['created_by' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'booked_by' => Yii::t('app', 'Booked By'),
            'bill' => Yii::t('app', 'Bill'),
            'bill_to' => Yii::t('app', 'Bill To'),
            'customer_reference' => Yii::t('app', 'Customer Reference'),
            'notes' => Yii::t('app', 'Notes'),
            'received' => Yii::t('app', 'Received'),
            'release' => Yii::t('app', 'Release'),
            'office_id' => Yii::t('app', 'Office ID'),
            'type_id' => Yii::t('app', 'Type ID'),
            'trailer_type' => Yii::t('app', 'Trailer Type'),
            'seal_no' => Yii::t('app', 'Seal No'),
            'salesman' => Yii::t('app', 'Salesman'),
            'status' => Yii::t('app', 'Status'),
            'updated_by' => Yii::t('app', 'Updated By'),
            'updated_at' => Yii::t('app', 'Updated At'),
            'created_by' => Yii::t('app', 'Created By'),
            'created_at' => Yii::t('app', 'Created At'),
            'rate_source' => Yii::t('app', 'Rate Source'),
            'rate_by' => Yii::t('app', 'Rate By'),
            'rate' => Yii::t('app', 'Rate'),
            'units' => Yii::t('app', 'Units'),
            'discount_percent' => Yii::t('app', 'Discount Percent'),
            'commodity_commodity_id' => Yii::t('app', 'Commodity Commodity ID'),
            'commodity_reference' => Yii::t('app', 'Commodity Reference'),
            'commodity_weight' => Yii::t('app', 'Commodity Weight'),
            'commodity_pieces' => Yii::t('app', 'Commodity Pieces'),
            'commodity_space' => Yii::t('app', 'Commodity Space'),
            'arrived_date' => Yii::t('app', 'Arrived Date'),
            'arrived_time_in' => Yii::t('app', 'Arrived Time In'),
            'arrived_time_out' => Yii::t('app', 'Arrived Time Out'),
            'signed_for_by' => Yii::t('app', 'Signed For By'),
            'invoice_date' => Yii::t('app', 'Invoice Date'),
            'scans' => Yii::t('app', 'Scans'),
            'hold_billing' => Yii::t('app', 'Hold Billing'),
            'rating_matrix_id' => Yii::t('app', 'Rating Matrix ID'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getChatMessages()
    {
        return $this->hasMany(\common\models\ChatMessage::className(), ['load_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDispatchAssignment()
    {
        return $this->hasOne(\common\models\DispatchAssignment::className(), ['load_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDocuments()
    {
        return $this->hasMany(\common\models\Document::className(), ['load_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCommodityCommodity()
    {
        return $this->hasOne(\common\models\Commodity::className(), ['id' => 'commodity_commodity_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBillTo()
    {
        return $this->hasOne(\common\models\Customer::className(), ['id' => 'bill_to']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRatingMatrix()
    {
        return $this->hasOne(\common\models\LoadRatingMatrix::className(), ['number' => 'rating_matrix_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getType()
    {
        return $this->hasOne(\common\models\LoadType::className(), ['id' => 'type_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOffice()
    {
        return $this->hasOne(\common\models\Office::className(), ['id' => 'office_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTrailerType()
    {
        return $this->hasOne(\common\models\TrailerType::className(), ['type' => 'trailer_type']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBookedBy()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'booked_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUpdatedBy()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'updated_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCreatedBy()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'created_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLoadAccessories()
    {
        return $this->hasMany(\common\models\LoadAccessories::className(), ['load_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLoadDrops()
    {
        return $this->hasMany(\common\models\LoadDrop::className(), ['load_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLoadMovements()
    {
        return $this->hasMany(\common\models\LoadMovement::className(), ['load_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLoadNotes()
    {
        return $this->hasMany(\common\models\LoadNote::className(), ['load_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLoadStops()
    {
        return $this->hasMany(\common\models\LoadStop::className(), ['load_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPayrollAdjustments()
    {
        return $this->hasMany(\common\models\PayrollAdjustment::className(), ['d_load_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPayrollPays()
    {
        return $this->hasMany(\common\models\PayrollPay::className(), ['d_load_id' => 'id']);
    }




}
