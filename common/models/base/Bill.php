<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "bill".
 *
 * @property integer $id
 * @property integer $from_vendor_id
 * @property integer $from_carrier_id
 * @property string $bill_no
 * @property string $posting_date
 * @property string $bill_date
 * @property string $due_date
 * @property integer $office_id
 * @property string $ap_account
 * @property string $memo
 * @property string $transaction_id
 * @property integer $payment_terms
 * @property string $status
 * @property string $created_at
 * @property integer $created_by
 * @property string $updated_at
 * @property integer $updated_by
 *
 * @property \common\models\Account $apAccount
 * @property \common\models\Carrier $fromCarrier
 * @property \common\models\Office $office
 * @property \common\models\PaymentTermCode $paymentTerms
 * @property \common\models\User $createdBy
 * @property \common\models\User $updatedBy
 * @property \common\models\Vendor $fromVendor
 * @property \common\models\BillItem[] $billItems
 * @property \common\models\Payment[] $payments
 * @property string $aliasModel
 */
abstract class Bill extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'bill';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
            ],
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['from_vendor_id', 'from_carrier_id', 'office_id', 'payment_terms'], 'default', 'value' => null],
            [['from_vendor_id', 'from_carrier_id', 'office_id', 'payment_terms'], 'integer'],
            [['posting_date', 'bill_date', 'due_date'], 'safe'],
            [['status'], 'required'],
            [['bill_no', 'ap_account', 'memo', 'transaction_id', 'status'], 'string', 'max' => 255],
            [['ap_account'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['ap_account' => 'account']],
            [['from_carrier_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Carrier::className(), 'targetAttribute' => ['from_carrier_id' => 'id']],
            [['office_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Office::className(), 'targetAttribute' => ['office_id' => 'id']],
            [['payment_terms'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\PaymentTermCode::className(), 'targetAttribute' => ['payment_terms' => 'id']],
            [['created_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['created_by' => 'id']],
            [['updated_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['updated_by' => 'id']],
            [['from_vendor_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Vendor::className(), 'targetAttribute' => ['from_vendor_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'from_vendor_id' => Yii::t('app', 'From Vendor ID'),
            'from_carrier_id' => Yii::t('app', 'From Carrier ID'),
            'bill_no' => Yii::t('app', 'Bill No'),
            'posting_date' => Yii::t('app', 'Posting Date'),
            'bill_date' => Yii::t('app', 'Bill Date'),
            'due_date' => Yii::t('app', 'Due Date'),
            'office_id' => Yii::t('app', 'Office ID'),
            'ap_account' => Yii::t('app', 'Ap Account'),
            'memo' => Yii::t('app', 'Memo'),
            'transaction_id' => Yii::t('app', 'Transaction ID'),
            'payment_terms' => Yii::t('app', 'Payment Terms'),
            'status' => Yii::t('app', 'Status'),
            'created_at' => Yii::t('app', 'Created At'),
            'created_by' => Yii::t('app', 'Created By'),
            'updated_at' => Yii::t('app', 'Updated At'),
            'updated_by' => Yii::t('app', 'Updated By'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getApAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'ap_account']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getFromCarrier()
    {
        return $this->hasOne(\common\models\Carrier::className(), ['id' => 'from_carrier_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOffice()
    {
        return $this->hasOne(\common\models\Office::className(), ['id' => 'office_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPaymentTerms()
    {
        return $this->hasOne(\common\models\PaymentTermCode::className(), ['id' => 'payment_terms']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCreatedBy()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'created_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUpdatedBy()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'updated_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getFromVendor()
    {
        return $this->hasOne(\common\models\Vendor::className(), ['id' => 'from_vendor_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBillItems()
    {
        return $this->hasMany(\common\models\BillItem::className(), ['bill_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPayments()
    {
        return $this->hasMany(\common\models\Payment::className(), ['bill_id' => 'id']);
    }




}
