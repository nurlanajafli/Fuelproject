<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "customer_contact".
 *
 * @property integer $id
 * @property integer $customer_id
 * @property string $contact_name
 * @property integer $department_id
 * @property string $direct_line
 * @property string $direct_fax
 * @property string $extension
 * @property string $alt_phone_1
 * @property string $desc_1
 * @property string $alt_phone_2
 * @property string $desc_2
 * @property string $email
 * @property string $notes
 * @property boolean $all_updates
 * @property boolean $booked
 * @property boolean $at_origin
 * @property boolean $delivered
 *
 * @property \common\models\Customer $customer
 * @property \common\models\Department $department
 * @property string $aliasModel
 */
abstract class CustomerContact extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'customer_contact';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['customer_id', 'all_updates', 'booked', 'at_origin', 'delivered'], 'required'],
            [['customer_id', 'department_id'], 'default', 'value' => null],
            [['customer_id', 'department_id'], 'integer'],
            [['notes'], 'string'],
            [['all_updates', 'booked', 'at_origin', 'delivered'], 'boolean'],
            [['contact_name', 'direct_line', 'direct_fax', 'extension', 'alt_phone_1', 'desc_1', 'alt_phone_2', 'desc_2', 'email'], 'string', 'max' => 255],
            [['customer_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Customer::className(), 'targetAttribute' => ['customer_id' => 'id']],
            [['department_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Department::className(), 'targetAttribute' => ['department_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'customer_id' => Yii::t('app', 'Customer ID'),
            'contact_name' => Yii::t('app', 'Contact Name'),
            'department_id' => Yii::t('app', 'Department ID'),
            'direct_line' => Yii::t('app', 'Direct Line'),
            'direct_fax' => Yii::t('app', 'Direct Fax'),
            'extension' => Yii::t('app', 'Extension'),
            'alt_phone_1' => Yii::t('app', 'Alt Phone 1'),
            'desc_1' => Yii::t('app', 'Desc 1'),
            'alt_phone_2' => Yii::t('app', 'Alt Phone 2'),
            'desc_2' => Yii::t('app', 'Desc 2'),
            'email' => Yii::t('app', 'Email'),
            'notes' => Yii::t('app', 'Notes'),
            'all_updates' => Yii::t('app', 'All Updates'),
            'booked' => Yii::t('app', 'Booked'),
            'at_origin' => Yii::t('app', 'At Origin'),
            'delivered' => Yii::t('app', 'Delivered'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCustomer()
    {
        return $this->hasOne(\common\models\Customer::className(), ['id' => 'customer_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDepartment()
    {
        return $this->hasOne(\common\models\Department::className(), ['id' => 'department_id']);
    }




}
