<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "payment".
 *
 * @property integer $id
 * @property string $type
 * @property integer $bill_id
 * @property string $date
 * @property string $account
 * @property string $amount
 * @property integer $office_id
 * @property string $our_ref
 * @property string $udf
 * @property string $memo
 * @property string $created_at
 * @property integer $created_by
 *
 * @property \common\models\Account $account0
 * @property \common\models\Bill $bill
 * @property \common\models\Office $office
 * @property \common\models\User $createdBy
 * @property string $aliasModel
 */
abstract class Payment extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'payment';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
                'updatedByAttribute' => false,
            ],
            [
                'class' => TimestampBehavior::className(),
                'updatedAtAttribute' => false,
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['type', 'date', 'account', 'amount'], 'required'],
            [['bill_id', 'office_id'], 'default', 'value' => null],
            [['bill_id', 'office_id'], 'integer'],
            [['date'], 'safe'],
            [['amount'], 'number'],
            [['type', 'account', 'our_ref', 'udf', 'memo'], 'string', 'max' => 255],
            [['account'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['account' => 'account']],
            [['bill_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Bill::className(), 'targetAttribute' => ['bill_id' => 'id']],
            [['office_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Office::className(), 'targetAttribute' => ['office_id' => 'id']],
            [['created_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['created_by' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'type' => Yii::t('app', 'Type'),
            'bill_id' => Yii::t('app', 'Bill ID'),
            'date' => Yii::t('app', 'Date'),
            'account' => Yii::t('app', 'Account'),
            'amount' => Yii::t('app', 'Amount'),
            'office_id' => Yii::t('app', 'Office ID'),
            'our_ref' => Yii::t('app', 'Our Ref'),
            'udf' => Yii::t('app', 'Udf'),
            'memo' => Yii::t('app', 'Memo'),
            'created_at' => Yii::t('app', 'Created At'),
            'created_by' => Yii::t('app', 'Created By'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAccount0()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'account']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBill()
    {
        return $this->hasOne(\common\models\Bill::className(), ['id' => 'bill_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOffice()
    {
        return $this->hasOne(\common\models\Office::className(), ['id' => 'office_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCreatedBy()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'created_by']);
    }




}
