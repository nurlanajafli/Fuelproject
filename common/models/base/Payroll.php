<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "payroll".
 *
 * @property integer $id
 * @property integer $payroll_batch_id
 * @property integer $driver_id
 * @property string $driver_type
 * @property integer $office_id
 * @property string $owner
 * @property string $direct_deposit
 * @property string $cd
 * @property string $salary_amount
 * @property string $total_hours
 * @property string $ot_hours
 * @property string $ot_2_hours
 * @property string $st_rate
 * @property string $ot_rate
 * @property string $ot_2_rate
 * @property string $description
 * @property string $other_pay_amount
 * @property boolean $posted
 * @property string $dispatch_pay
 * @property string $mileage_pay
 * @property string $bank_account
 * @property integer $pay_to_carrier_id
 * @property integer $pay_to_driver_id
 * @property integer $pay_to_vendor_id
 * @property string $codriver_pay
 * @property string $d_expense_acct
 *
 * @property \common\models\Account $bankAccount
 * @property \common\models\Account $dExpenseAcct
 * @property \common\models\Carrier $payToCarrier
 * @property \common\models\Driver $driver
 * @property \common\models\Driver $payToDriver
 * @property \common\models\Office $office
 * @property \common\models\PayrollBatch $payrollBatch
 * @property \common\models\Vendor $payToVendor
 * @property \common\models\PayrollAdjustment[] $payrollAdjustments
 * @property \common\models\PayrollPay[] $payrollPays
 * @property string $aliasModel
 */
abstract class Payroll extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'payroll';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['payroll_batch_id'], 'required'],
            [['payroll_batch_id', 'driver_id', 'office_id', 'pay_to_carrier_id', 'pay_to_driver_id', 'pay_to_vendor_id'], 'default', 'value' => null],
            [['payroll_batch_id', 'driver_id', 'office_id', 'pay_to_carrier_id', 'pay_to_driver_id', 'pay_to_vendor_id'], 'integer'],
            [['salary_amount', 'total_hours', 'ot_hours', 'ot_2_hours', 'st_rate', 'ot_rate', 'ot_2_rate', 'other_pay_amount', 'dispatch_pay', 'mileage_pay', 'codriver_pay'], 'number'],
            [['posted'], 'boolean'],
            [['driver_type', 'owner', 'direct_deposit', 'cd', 'description', 'bank_account', 'd_expense_acct'], 'string', 'max' => 255],
            [['bank_account'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['bank_account' => 'account']],
            [['d_expense_acct'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['d_expense_acct' => 'account']],
            [['pay_to_carrier_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Carrier::className(), 'targetAttribute' => ['pay_to_carrier_id' => 'id']],
            [['driver_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Driver::className(), 'targetAttribute' => ['driver_id' => 'id']],
            [['pay_to_driver_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Driver::className(), 'targetAttribute' => ['pay_to_driver_id' => 'id']],
            [['office_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Office::className(), 'targetAttribute' => ['office_id' => 'id']],
            [['payroll_batch_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\PayrollBatch::className(), 'targetAttribute' => ['payroll_batch_id' => 'id']],
            [['pay_to_vendor_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Vendor::className(), 'targetAttribute' => ['pay_to_vendor_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'payroll_batch_id' => Yii::t('app', 'Payroll Batch ID'),
            'driver_id' => Yii::t('app', 'Driver ID'),
            'driver_type' => Yii::t('app', 'Driver Type'),
            'office_id' => Yii::t('app', 'Office ID'),
            'owner' => Yii::t('app', 'Owner'),
            'direct_deposit' => Yii::t('app', 'Direct Deposit'),
            'cd' => Yii::t('app', 'Cd'),
            'salary_amount' => Yii::t('app', 'Salary Amount'),
            'total_hours' => Yii::t('app', 'Total Hours'),
            'ot_hours' => Yii::t('app', 'Ot Hours'),
            'ot_2_hours' => Yii::t('app', 'Ot 2 Hours'),
            'st_rate' => Yii::t('app', 'St Rate'),
            'ot_rate' => Yii::t('app', 'Ot Rate'),
            'ot_2_rate' => Yii::t('app', 'Ot 2 Rate'),
            'description' => Yii::t('app', 'Description'),
            'other_pay_amount' => Yii::t('app', 'Other Pay Amount'),
            'posted' => Yii::t('app', 'Posted'),
            'dispatch_pay' => Yii::t('app', 'Dispatch Pay'),
            'mileage_pay' => Yii::t('app', 'Mileage Pay'),
            'bank_account' => Yii::t('app', 'Bank Account'),
            'pay_to_carrier_id' => Yii::t('app', 'Pay To Carrier ID'),
            'pay_to_driver_id' => Yii::t('app', 'Pay To Driver ID'),
            'pay_to_vendor_id' => Yii::t('app', 'Pay To Vendor ID'),
            'codriver_pay' => Yii::t('app', 'Codriver Pay'),
            'd_expense_acct' => Yii::t('app', 'D Expense Acct'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBankAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'bank_account']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDExpenseAcct()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'd_expense_acct']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPayToCarrier()
    {
        return $this->hasOne(\common\models\Carrier::className(), ['id' => 'pay_to_carrier_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDriver()
    {
        return $this->hasOne(\common\models\Driver::className(), ['id' => 'driver_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPayToDriver()
    {
        return $this->hasOne(\common\models\Driver::className(), ['id' => 'pay_to_driver_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOffice()
    {
        return $this->hasOne(\common\models\Office::className(), ['id' => 'office_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPayrollBatch()
    {
        return $this->hasOne(\common\models\PayrollBatch::className(), ['id' => 'payroll_batch_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPayToVendor()
    {
        return $this->hasOne(\common\models\Vendor::className(), ['id' => 'pay_to_vendor_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPayrollAdjustments()
    {
        return $this->hasMany(\common\models\PayrollAdjustment::className(), ['payroll_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPayrollPays()
    {
        return $this->hasMany(\common\models\PayrollPay::className(), ['payroll_id' => 'id']);
    }




}
