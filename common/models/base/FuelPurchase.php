<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "fuel_purchase".
 *
 * @property integer $id
 * @property string $trip_no
 * @property integer $unit_id
 * @property integer $driver_id
 * @property integer $codriver_id
 * @property integer $truck_id
 * @property integer $trailer_id
 * @property integer $trailer2_id
 * @property string $purchase_date
 * @property string $purchase_time
 * @property string $vendor
 * @property string $city
 * @property integer $state_id
 * @property string $quantity
 * @property string $cost
 * @property string $ppg
 * @property string $transaction_id
 * @property string $card
 * @property integer $product_code
 * @property string $date
 * @property string $time
 * @property string $created_at
 * @property integer $created_by
 * @property string $updated_at
 * @property integer $updated_by
 *
 * @property \common\models\Driver $driver
 * @property \common\models\Driver $codriver
 * @property \common\models\FuelProductCodes $productCode
 * @property \common\models\State $state
 * @property \common\models\Trailer $trailer
 * @property \common\models\Trailer $trailer2
 * @property \common\models\Truck $truck
 * @property \common\models\Unit $unit
 * @property \common\models\User $createdBy
 * @property \common\models\User $updatedBy
 * @property string $aliasModel
 */
abstract class FuelPurchase extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'fuel_purchase';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
            ],
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['unit_id', 'driver_id', 'codriver_id', 'truck_id', 'trailer_id', 'trailer2_id', 'state_id', 'product_code'], 'default', 'value' => null],
            [['unit_id', 'driver_id', 'codriver_id', 'truck_id', 'trailer_id', 'trailer2_id', 'state_id', 'product_code'], 'integer'],
            [['purchase_date', 'purchase_time', 'date', 'time'], 'safe'],
            [['state_id'], 'required'],
            [['quantity', 'cost', 'ppg'], 'number'],
            [['trip_no', 'vendor', 'city', 'transaction_id', 'card'], 'string', 'max' => 255],
            [['driver_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Driver::className(), 'targetAttribute' => ['driver_id' => 'id']],
            [['codriver_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Driver::className(), 'targetAttribute' => ['codriver_id' => 'id']],
            [['product_code'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\FuelProductCodes::className(), 'targetAttribute' => ['product_code' => 'id']],
            [['state_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\State::className(), 'targetAttribute' => ['state_id' => 'id']],
            [['trailer_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Trailer::className(), 'targetAttribute' => ['trailer_id' => 'id']],
            [['trailer2_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Trailer::className(), 'targetAttribute' => ['trailer2_id' => 'id']],
            [['truck_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Truck::className(), 'targetAttribute' => ['truck_id' => 'id']],
            [['unit_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Unit::className(), 'targetAttribute' => ['unit_id' => 'id']],
            [['created_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['created_by' => 'id']],
            [['updated_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['updated_by' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'trip_no' => Yii::t('app', 'Trip No'),
            'unit_id' => Yii::t('app', 'Unit ID'),
            'driver_id' => Yii::t('app', 'Driver ID'),
            'codriver_id' => Yii::t('app', 'Codriver ID'),
            'truck_id' => Yii::t('app', 'Truck ID'),
            'trailer_id' => Yii::t('app', 'Trailer ID'),
            'trailer2_id' => Yii::t('app', 'Trailer2 ID'),
            'purchase_date' => Yii::t('app', 'Purchase Date'),
            'purchase_time' => Yii::t('app', 'Purchase Time'),
            'vendor' => Yii::t('app', 'Vendor'),
            'city' => Yii::t('app', 'City'),
            'state_id' => Yii::t('app', 'State ID'),
            'quantity' => Yii::t('app', 'Quantity'),
            'cost' => Yii::t('app', 'Cost'),
            'ppg' => Yii::t('app', 'Ppg'),
            'created_at' => Yii::t('app', 'Created At'),
            'created_by' => Yii::t('app', 'Created By'),
            'updated_at' => Yii::t('app', 'Updated At'),
            'updated_by' => Yii::t('app', 'Updated By'),
            'transaction_id' => Yii::t('app', 'Transaction ID'),
            'card' => Yii::t('app', 'Card'),
            'product_code' => Yii::t('app', 'Product Code'),
            'date' => Yii::t('app', 'Date'),
            'time' => Yii::t('app', 'Time'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDriver()
    {
        return $this->hasOne(\common\models\Driver::className(), ['id' => 'driver_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCodriver()
    {
        return $this->hasOne(\common\models\Driver::className(), ['id' => 'codriver_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProductCode()
    {
        return $this->hasOne(\common\models\FuelProductCodes::className(), ['id' => 'product_code']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getState()
    {
        return $this->hasOne(\common\models\State::className(), ['id' => 'state_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTrailer()
    {
        return $this->hasOne(\common\models\Trailer::className(), ['id' => 'trailer_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTrailer2()
    {
        return $this->hasOne(\common\models\Trailer::className(), ['id' => 'trailer2_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTruck()
    {
        return $this->hasOne(\common\models\Truck::className(), ['id' => 'truck_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUnit()
    {
        return $this->hasOne(\common\models\Unit::className(), ['id' => 'unit_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCreatedBy()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'created_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUpdatedBy()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'updated_by']);
    }




}
