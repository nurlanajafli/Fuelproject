<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "accounting_default".
 *
 * @property integer $id
 * @property string $default_unclassified_account_id
 * @property string $default_escrow_holding_account_id
 * @property string $default_advances_issued_account_id
 * @property string $fiscal_year_start_month
 * @property boolean $require_office_on_all_transactions
 * @property string $default_work_order_income_account_id
 * @property string $default_parts_inventory_account_id
 * @property string $default_labor_cost_account_id
 * @property string $default_misc_cost_account_id
 * @property string $primary_ar_account_id
 * @property integer $default_invoice_payment_terms
 * @property string $default_invoice_write_off_account_id
 * @property string $default_invoice_discounts_account_id
 * @property string $default_unapplied_funds_account_id
 * @property string $default_income_account_id
 * @property integer $default_invoice_item_code
 * @property integer $name_on_factored_invoices_car_id
 * @property integer $name_on_factored_invoices_cus_id
 * @property integer $name_on_factored_invoices_ven_id
 * @property string $factoring_account_id
 * @property string $default_invoice_process
 * @property string $default_print_paper_type
 * @property string $default_invoice_print_style
 * @property string $default_invoice_aging_date
 * @property string $default_invoice_posting_date
 * @property string $default_date_for_group_invoices
 * @property string $apr_on_overdue_invoices
 * @property boolean $include_load_notes_on_invoices
 * @property boolean $hide_header_information_on_invoices
 * @property boolean $show_trucks_and_trailers_on_invoices
 * @property boolean $show_load_details_on_third_party_invoices
 * @property boolean $post_invoice_notes_when_emailing_invoices
 * @property string $primary_ap_account_id
 * @property integer $default_bill_payment_terms
 * @property string $default_bill_write_off_account_id
 * @property string $default_bill_discounts_account_id
 * @property string $default_carrier_expense_account_id
 * @property boolean $do_not_pay_carriers_for_uninvoiced_loads
 * @property integer $default_ven_iss_adv
 * @property boolean $deduct_open_adv_pay_carriers
 * @property string $default_check_writing_bank_account_id
 * @property string $default_undeposited_funds_account_id
 * @property string $check_printing
 * @property string $payroll_bank_account_id
 * @property string $payroll_expense_account_id
 * @property string $payroll_tax_expense_account_id
 * @property string $fsm_liability_account_id
 * @property string $futa_liability_account_id
 * @property string $calc_method
 * @property string $pay_method
 * @property string $per_diem_rate
 * @property boolean $to_show_adv_balances_on_settlements
 * @property boolean $to_show_escrow_balances_on_settlements
 * @property boolean $d_show_adv_balances_on_settlements
 * @property boolean $d_show_escrow_balances_on_settlements
 * @property string $sales_commissions_calc_base
 * @property string $sales_commission_override_percentage
 * @property boolean $deduct_load_expenses_from_commissions
 * @property string $created_at
 * @property string $updated_at
 * @property integer $created_by
 * @property integer $updated_by
 *
 * @property \common\models\Account $defaultUnclassifiedAccount
 * @property \common\models\Account $defaultEscrowHoldingAccount
 * @property \common\models\Account $defaultAdvancesIssuedAccount
 * @property \common\models\Account $defaultWorkOrderIncomeAccount
 * @property \common\models\Account $defaultPartsInventoryAccount
 * @property \common\models\Account $defaultLaborCostAccount
 * @property \common\models\Account $defaultMiscCostAccount
 * @property \common\models\Account $primaryArAccount
 * @property \common\models\Account $defaultInvoiceWriteOffAccount
 * @property \common\models\Account $defaultInvoiceDiscountsAccount
 * @property \common\models\Account $defaultUnappliedFundsAccount
 * @property \common\models\Account $defaultIncomeAccount
 * @property \common\models\Account $primaryApAccount
 * @property \common\models\Account $defaultBillWriteOffAccount
 * @property \common\models\Account $defaultBillDiscountsAccount
 * @property \common\models\Account $defaultCarrierExpenseAccount
 * @property \common\models\Account $defaultCheckWritingBankAccount
 * @property \common\models\Account $defaultUndepositedFundsAccount
 * @property \common\models\Account $payrollBankAccount
 * @property \common\models\Account $payrollExpenseAccount
 * @property \common\models\Account $payrollTaxExpenseAccount
 * @property \common\models\Account $fsmLiabilityAccount
 * @property \common\models\Account $futaLiabilityAccount
 * @property \common\models\Carrier $nameOnFactoredInvoicesCar
 * @property \common\models\Customer $nameOnFactoredInvoicesCus
 * @property \common\models\InvoiceItemCode $defaultInvoiceItemCode
 * @property \common\models\PaymentTermCode $defaultInvoicePaymentTerms
 * @property \common\models\PaymentTermCode $defaultBillPaymentTerms
 * @property \common\models\User $createdBy
 * @property \common\models\User $updatedBy
 * @property \common\models\Vendor $nameOnFactoredInvoicesVen
 * @property \common\models\Vendor $defaultVenIssAdv
 * @property string $aliasModel
 */
abstract class AccountingDefault extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'accounting_default';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
            ],
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['require_office_on_all_transactions', 'include_load_notes_on_invoices', 'hide_header_information_on_invoices', 'show_trucks_and_trailers_on_invoices', 'show_load_details_on_third_party_invoices', 'post_invoice_notes_when_emailing_invoices', 'do_not_pay_carriers_for_uninvoiced_loads', 'deduct_open_adv_pay_carriers', 'to_show_adv_balances_on_settlements', 'to_show_escrow_balances_on_settlements', 'd_show_adv_balances_on_settlements', 'd_show_escrow_balances_on_settlements', 'deduct_load_expenses_from_commissions'], 'required'],
            [['require_office_on_all_transactions', 'include_load_notes_on_invoices', 'hide_header_information_on_invoices', 'show_trucks_and_trailers_on_invoices', 'show_load_details_on_third_party_invoices', 'post_invoice_notes_when_emailing_invoices', 'do_not_pay_carriers_for_uninvoiced_loads', 'deduct_open_adv_pay_carriers', 'to_show_adv_balances_on_settlements', 'to_show_escrow_balances_on_settlements', 'd_show_adv_balances_on_settlements', 'd_show_escrow_balances_on_settlements', 'deduct_load_expenses_from_commissions'], 'boolean'],
            [['default_invoice_payment_terms', 'default_invoice_item_code', 'name_on_factored_invoices_car_id', 'name_on_factored_invoices_cus_id', 'name_on_factored_invoices_ven_id', 'default_bill_payment_terms', 'default_ven_iss_adv'], 'default', 'value' => null],
            [['default_invoice_payment_terms', 'default_invoice_item_code', 'name_on_factored_invoices_car_id', 'name_on_factored_invoices_cus_id', 'name_on_factored_invoices_ven_id', 'default_bill_payment_terms', 'default_ven_iss_adv'], 'integer'],
            [['apr_on_overdue_invoices', 'per_diem_rate', 'sales_commission_override_percentage'], 'number'],
            [['default_unclassified_account_id', 'default_escrow_holding_account_id', 'default_advances_issued_account_id', 'fiscal_year_start_month', 'default_work_order_income_account_id', 'default_parts_inventory_account_id', 'default_labor_cost_account_id', 'default_misc_cost_account_id', 'primary_ar_account_id', 'default_invoice_write_off_account_id', 'default_invoice_discounts_account_id', 'default_unapplied_funds_account_id', 'default_income_account_id', 'factoring_account_id', 'default_invoice_process', 'default_print_paper_type', 'default_invoice_print_style', 'default_invoice_aging_date', 'default_invoice_posting_date', 'default_date_for_group_invoices', 'primary_ap_account_id', 'default_bill_write_off_account_id', 'default_bill_discounts_account_id', 'default_carrier_expense_account_id', 'default_check_writing_bank_account_id', 'default_undeposited_funds_account_id', 'check_printing', 'payroll_bank_account_id', 'payroll_expense_account_id', 'payroll_tax_expense_account_id', 'fsm_liability_account_id', 'futa_liability_account_id', 'calc_method', 'pay_method', 'sales_commissions_calc_base'], 'string', 'max' => 255],
            [['default_unclassified_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_unclassified_account_id' => 'account']],
            [['default_escrow_holding_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_escrow_holding_account_id' => 'account']],
            [['default_advances_issued_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_advances_issued_account_id' => 'account']],
            [['default_work_order_income_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_work_order_income_account_id' => 'account']],
            [['default_parts_inventory_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_parts_inventory_account_id' => 'account']],
            [['default_labor_cost_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_labor_cost_account_id' => 'account']],
            [['default_misc_cost_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_misc_cost_account_id' => 'account']],
            [['primary_ar_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['primary_ar_account_id' => 'account']],
            [['default_invoice_write_off_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_invoice_write_off_account_id' => 'account']],
            [['default_invoice_discounts_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_invoice_discounts_account_id' => 'account']],
            [['default_unapplied_funds_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_unapplied_funds_account_id' => 'account']],
            [['default_income_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_income_account_id' => 'account']],
            [['primary_ap_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['primary_ap_account_id' => 'account']],
            [['default_bill_write_off_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_bill_write_off_account_id' => 'account']],
            [['default_bill_discounts_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_bill_discounts_account_id' => 'account']],
            [['default_carrier_expense_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_carrier_expense_account_id' => 'account']],
            [['default_check_writing_bank_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_check_writing_bank_account_id' => 'account']],
            [['default_undeposited_funds_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['default_undeposited_funds_account_id' => 'account']],
            [['payroll_bank_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['payroll_bank_account_id' => 'account']],
            [['payroll_expense_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['payroll_expense_account_id' => 'account']],
            [['payroll_tax_expense_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['payroll_tax_expense_account_id' => 'account']],
            [['fsm_liability_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['fsm_liability_account_id' => 'account']],
            [['futa_liability_account_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Account::className(), 'targetAttribute' => ['futa_liability_account_id' => 'account']],
            [['name_on_factored_invoices_car_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Carrier::className(), 'targetAttribute' => ['name_on_factored_invoices_car_id' => 'id']],
            [['name_on_factored_invoices_cus_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Customer::className(), 'targetAttribute' => ['name_on_factored_invoices_cus_id' => 'id']],
            [['default_invoice_item_code'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\InvoiceItemCode::className(), 'targetAttribute' => ['default_invoice_item_code' => 'id']],
            [['default_invoice_payment_terms'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\PaymentTermCode::className(), 'targetAttribute' => ['default_invoice_payment_terms' => 'id']],
            [['default_bill_payment_terms'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\PaymentTermCode::className(), 'targetAttribute' => ['default_bill_payment_terms' => 'id']],
            [['created_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['created_by' => 'id']],
            [['updated_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['updated_by' => 'id']],
            [['name_on_factored_invoices_ven_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Vendor::className(), 'targetAttribute' => ['name_on_factored_invoices_ven_id' => 'id']],
            [['default_ven_iss_adv'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Vendor::className(), 'targetAttribute' => ['default_ven_iss_adv' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'default_unclassified_account_id' => Yii::t('app', 'Default Unclassified Account ID'),
            'default_escrow_holding_account_id' => Yii::t('app', 'Default Escrow Holding Account ID'),
            'default_advances_issued_account_id' => Yii::t('app', 'Default Advances Issued Account ID'),
            'fiscal_year_start_month' => Yii::t('app', 'Fiscal Year Start Month'),
            'require_office_on_all_transactions' => Yii::t('app', 'Require Office On All Transactions'),
            'default_work_order_income_account_id' => Yii::t('app', 'Default Work Order Income Account ID'),
            'default_parts_inventory_account_id' => Yii::t('app', 'Default Parts Inventory Account ID'),
            'default_labor_cost_account_id' => Yii::t('app', 'Default Labor Cost Account ID'),
            'default_misc_cost_account_id' => Yii::t('app', 'Default Misc Cost Account ID'),
            'primary_ar_account_id' => Yii::t('app', 'Primary Ar Account ID'),
            'default_invoice_payment_terms' => Yii::t('app', 'Default Invoice Payment Terms'),
            'default_invoice_write_off_account_id' => Yii::t('app', 'Default Invoice Write Off Account ID'),
            'default_invoice_discounts_account_id' => Yii::t('app', 'Default Invoice Discounts Account ID'),
            'default_unapplied_funds_account_id' => Yii::t('app', 'Default Unapplied Funds Account ID'),
            'default_income_account_id' => Yii::t('app', 'Default Income Account ID'),
            'default_invoice_item_code' => Yii::t('app', 'Default Invoice Item Code'),
            'name_on_factored_invoices_car_id' => Yii::t('app', 'Name On Factored Invoices Car ID'),
            'name_on_factored_invoices_cus_id' => Yii::t('app', 'Name On Factored Invoices Cus ID'),
            'name_on_factored_invoices_ven_id' => Yii::t('app', 'Name On Factored Invoices Ven ID'),
            'factoring_account_id' => Yii::t('app', 'Factoring Account ID'),
            'default_invoice_process' => Yii::t('app', 'Default Invoice Process'),
            'default_print_paper_type' => Yii::t('app', 'Default Print Paper Type'),
            'default_invoice_print_style' => Yii::t('app', 'Default Invoice Print Style'),
            'default_invoice_aging_date' => Yii::t('app', 'Default Invoice Aging Date'),
            'default_invoice_posting_date' => Yii::t('app', 'Default Invoice Posting Date'),
            'default_date_for_group_invoices' => Yii::t('app', 'Default Date For Group Invoices'),
            'apr_on_overdue_invoices' => Yii::t('app', 'Apr On Overdue Invoices'),
            'include_load_notes_on_invoices' => Yii::t('app', 'Include Load Notes On Invoices'),
            'hide_header_information_on_invoices' => Yii::t('app', 'Hide Header Information On Invoices'),
            'show_trucks_and_trailers_on_invoices' => Yii::t('app', 'Show Trucks And Trailers On Invoices'),
            'show_load_details_on_third_party_invoices' => Yii::t('app', 'Show Load Details On Third Party Invoices'),
            'post_invoice_notes_when_emailing_invoices' => Yii::t('app', 'Post Invoice Notes When Emailing Invoices'),
            'primary_ap_account_id' => Yii::t('app', 'Primary Ap Account ID'),
            'default_bill_payment_terms' => Yii::t('app', 'Default Bill Payment Terms'),
            'default_bill_write_off_account_id' => Yii::t('app', 'Default Bill Write Off Account ID'),
            'default_bill_discounts_account_id' => Yii::t('app', 'Default Bill Discounts Account ID'),
            'default_carrier_expense_account_id' => Yii::t('app', 'Default Carrier Expense Account ID'),
            'do_not_pay_carriers_for_uninvoiced_loads' => Yii::t('app', 'Do Not Pay Carriers For Uninvoiced Loads'),
            'default_ven_iss_adv' => Yii::t('app', 'Default Ven Iss Adv'),
            'deduct_open_adv_pay_carriers' => Yii::t('app', 'Deduct Open Adv Pay Carriers'),
            'default_check_writing_bank_account_id' => Yii::t('app', 'Default Check Writing Bank Account ID'),
            'default_undeposited_funds_account_id' => Yii::t('app', 'Default Undeposited Funds Account ID'),
            'check_printing' => Yii::t('app', 'Check Printing'),
            'payroll_bank_account_id' => Yii::t('app', 'Payroll Bank Account ID'),
            'payroll_expense_account_id' => Yii::t('app', 'Payroll Expense Account ID'),
            'payroll_tax_expense_account_id' => Yii::t('app', 'Payroll Tax Expense Account ID'),
            'fsm_liability_account_id' => Yii::t('app', 'Fsm Liability Account ID'),
            'futa_liability_account_id' => Yii::t('app', 'Futa Liability Account ID'),
            'calc_method' => Yii::t('app', 'Calc Method'),
            'pay_method' => Yii::t('app', 'Pay Method'),
            'per_diem_rate' => Yii::t('app', 'Per Diem Rate'),
            'to_show_adv_balances_on_settlements' => Yii::t('app', 'To Show Adv Balances On Settlements'),
            'to_show_escrow_balances_on_settlements' => Yii::t('app', 'To Show Escrow Balances On Settlements'),
            'd_show_adv_balances_on_settlements' => Yii::t('app', 'D Show Adv Balances On Settlements'),
            'd_show_escrow_balances_on_settlements' => Yii::t('app', 'D Show Escrow Balances On Settlements'),
            'sales_commissions_calc_base' => Yii::t('app', 'Sales Commissions Calc Base'),
            'sales_commission_override_percentage' => Yii::t('app', 'Sales Commission Override Percentage'),
            'deduct_load_expenses_from_commissions' => Yii::t('app', 'Deduct Load Expenses From Commissions'),
            'created_at' => Yii::t('app', 'Created At'),
            'updated_at' => Yii::t('app', 'Updated At'),
            'created_by' => Yii::t('app', 'Created By'),
            'updated_by' => Yii::t('app', 'Updated By'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultUnclassifiedAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_unclassified_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultEscrowHoldingAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_escrow_holding_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultAdvancesIssuedAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_advances_issued_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultWorkOrderIncomeAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_work_order_income_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultPartsInventoryAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_parts_inventory_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultLaborCostAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_labor_cost_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultMiscCostAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_misc_cost_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPrimaryArAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'primary_ar_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultInvoiceWriteOffAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_invoice_write_off_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultInvoiceDiscountsAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_invoice_discounts_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultUnappliedFundsAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_unapplied_funds_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultIncomeAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_income_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPrimaryApAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'primary_ap_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultBillWriteOffAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_bill_write_off_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultBillDiscountsAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_bill_discounts_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultCarrierExpenseAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_carrier_expense_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultCheckWritingBankAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_check_writing_bank_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultUndepositedFundsAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'default_undeposited_funds_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPayrollBankAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'payroll_bank_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPayrollExpenseAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'payroll_expense_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPayrollTaxExpenseAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'payroll_tax_expense_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getFsmLiabilityAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'fsm_liability_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getFutaLiabilityAccount()
    {
        return $this->hasOne(\common\models\Account::className(), ['account' => 'futa_liability_account_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getNameOnFactoredInvoicesCar()
    {
        return $this->hasOne(\common\models\Carrier::className(), ['id' => 'name_on_factored_invoices_car_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getNameOnFactoredInvoicesCus()
    {
        return $this->hasOne(\common\models\Customer::className(), ['id' => 'name_on_factored_invoices_cus_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultInvoiceItemCode()
    {
        return $this->hasOne(\common\models\InvoiceItemCode::className(), ['id' => 'default_invoice_item_code']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultInvoicePaymentTerms()
    {
        return $this->hasOne(\common\models\PaymentTermCode::className(), ['id' => 'default_invoice_payment_terms']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultBillPaymentTerms()
    {
        return $this->hasOne(\common\models\PaymentTermCode::className(), ['id' => 'default_bill_payment_terms']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCreatedBy()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'created_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUpdatedBy()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'updated_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getNameOnFactoredInvoicesVen()
    {
        return $this->hasOne(\common\models\Vendor::className(), ['id' => 'name_on_factored_invoices_ven_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultVenIssAdv()
    {
        return $this->hasOne(\common\models\Vendor::className(), ['id' => 'default_ven_iss_adv']);
    }




}
