<?php
/**
 * @var \yii\web\View $this
 * @var \common\models\LoadStop $model
 * @var array $formConfig
 */

use common\models\State;
use yii\bootstrap4\ActiveForm;
use yii\helpers\ArrayHelper;
use common\models\Location;
use yii\web\View;

$formConfig['fieldConfig'] = Yii::$app->params['activeForm']['horizontalLoadFormConfig'];
$formConfig['options']['class'] .= ' form';
$form = ActiveForm::begin($formConfig);
$noTag = ['options' => ['tag' => false]];

$states = State::find()->orderBy(['state_code' => SORT_ASC])->all();
$this->registerJsVar('states', array_map(function ($stateModel) {
    /** @var State $stateModel */
    return ['id' => $stateModel->id, 'stateAbbreviation' => $stateModel->state_code, 'countryAbbreviation' => $stateModel->country_code];
}, $states), View::POS_END);

?>
<?php $companyNameHide = false;
if ($model->company_id == '' &&
    ($model->company_name != '' || $model->address != '' || $model->zip != '')):
    $companyNameHide = true;
endif;
?>
    <style>
        .locationMap .location-map__panel {
            right: 10px;
            top: -8px;
        }

        .locationMap .location-map__option {
            padding: 4px 10px;
            cursor: pointer;
            font-size: 13px;
        }

        .location-map__actions {
            padding: 5px 16px !important;
        }

        <?php if($companyNameHide): ?>
        .field-loadstop-company_id {
            display: none;
        }

        <?php endif ?>
    </style>
    <div class="col-5">
        <?= $form->field($model, 'stop_type')->dropDownList(\common\enums\LoadStopType::getUiEnums()) ?>
        <?= $form->field($model, 'stop_number')->textInput(['disabled' => 'disabled']) ?>
        <?= $form->field($model, 'available_from')->textInput(['type' => 'date']) ?>
        <?= $form->field($model, 'available_thru')->textInput(['type' => 'date']) ?>
        <?= $form->field($model, 'time_from')->textInput(['type' => 'time']) ?>
        <?= $form->field($model, 'time_to')->textInput(['type' => 'time']) ?>
        <?= $form->field($model, 'lat')->hiddenInput(['id' => 'location-lat'])->label(false) ?>
        <?= $form->field($model, 'lon')->hiddenInput(['id' => 'location-lon'])->label(false) ?>
        <?= $form->field($model, 'notes')->textarea(['rows' => 2]) ?>
    </div>
    <div class="col-7">
        <?php $form->fieldConfig = Yii::$app->params['activeForm']['horizontalFormConfig']; ?>
        <?= $form->field($model, 'company_id')->widget(\common\widgets\tdd\Dropdown::class, [
            'items' => Location::find()->joinWith('state')->all(),
            'modelClass' => Location::class,
            'grid' => [
                'columns' => [
                    'id|visible=false',
                    'company_name',
                    'address',
                    'city',
                    'main_phone|visible=false',
                    'state_id|visible=false',
                    'zip|visible=false',
                    'state_id|rel=state._label|title=St',
                    'notes|visible=false',
                    'directions|visible=false',
                ]
            ],
            'callback' => 'loadStopCompanyChanged'
        ]) ?>
        <div class="form-group_ location-company_name<?php if (!$companyNameHide): ?> d-none<?php endif; ?>">
            <?= $form->field($model, 'company_name')->textInput(['id' => 'location-company_name']); ?>
        </div>
        <div class="form-group row">
            <label class="col-sm-2" style="white-space: nowrap;">
                <?= $model->getAttributeLabel('address') ?>
            </label>
            <?= $form->field($model, 'address', ArrayHelper::merge($noTag, ['template' => '<div class="col-6">{input}{error}{hint}</div>']))->textInput(['id' => 'location-address'])->label(false) ?>
            <div class="col-2">
                <button type="button" class="btn js-suggested-address border">...</button>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2" style="white-space: nowrap;">
                <?= $model->getAttributeLabel('city') . ', ' . $model->getAttributeLabel('state_id') . ', ' . $model->getAttributeLabel('zip') ?>
            </label>
            <!-- attribute city -->
            <?= $form->field($model, 'city', ArrayHelper::merge($noTag, ['template' => '<div class="col-3">{input}{error}{hint}</div>']))
                ->textInput(['maxlength' => true, 'id' => 'location-city', 'placeholder' => Yii::t('app', 'City')])
            ?>
            <!-- attribute state_id -->
            <?= // generated by schmunk42\giiant\generators\crud\providers\core\RelationProvider::activeField
            $form->field($model, 'state_id', ArrayHelper::merge($noTag, ['template' => '<div class="col-2">{input}{error}{hint}</div>']))
                ->dropDownList(
                    ArrayHelper::map(common\models\State::find()->all(), 'id', '_label'),
                    ['prompt' => Yii::t('app', 'State'), 'id' => 'location-state_id']
                )->label(false) ?>
            <!-- attribute zip -->
            <?= $form->field($model, 'zip', ArrayHelper::merge($noTag, ['template' => '<div class="col-3">{input}{error}{hint}</div>']))
                ->textInput(['placeholder' => Yii::t('app', 'Zip'), 'id' => 'location-zip']) ?>
        </div>
        <?= $form->field($model, 'zone')->dropdownList(
            ArrayHelper::map(common\models\Zone::find()->all(), 'code', 'code'),
            ['prompt' => Yii::t('app', 'Zone')]
        ) ?>
        <?= $form->field($model, 'phone')->textInput() ?>
        <?= $form->field($model, 'contact')->textInput() ?>
        <?= $form->field($model, 'reference')->textInput() ?>
        <?= $form->field($model, 'appt_required')->checkbox() ?>
        <?= $form->field($model, 'appt_reference')->textInput() ?>
    </div>
    <div class="col-5">
        <div class="form-group row field-loadstop-directions">
            <label class="col-sm-4" for="loadstop-directions"><?= Yii::t('app', 'Loc. Directions') ?></label>
            <div class="col-sm-8">
                <textarea readonly class="form-control" id="location_directions"
                          rows="2"><?= $model->company ? $model->company->directions : '' ?></textarea>
            </div>
        </div>
    </div>
    <div class="col-7">
        <div class="form-group row field-loadstop-location-notes">
            <label class="col-sm-2" for="loadstop-location-notes"><?= Yii::t('app', 'Loc. Notes') ?></label>
            <div class="col-sm-8">
                <textarea readonly class="form-control" id="location_notes"
                          rows="2"><?= $model->company ? $model->company->notes : '' ?></textarea>
            </div>
        </div>
    </div>
    <div class="col-lg locationMap d-none">
        <div class="location-map">
            <div class="location-map__panel">
                <ul class="location-map__list"></ul>
                <div class="location-map__actions">
                    <a href="#" class="btn btn-primary btn-block js-location-update"><?= Yii::t('app', 'UPDATE') ?></a>
                </div>
                <div class="alert alert-success alert-dismissible mt-3" style="display: none;">
                    <?= Yii::t('app', 'Updated successfully!') ?>
                    <button class="close" type="button" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            </div>
            <div id="myMap" style="height: 380px;width:100%;"></div>
            <script>
                suggestedAddress = function (params, reverseGeocodeResp) {
                    return $.get("/maps/search?" + params, function (response) {
                        if (reverseGeocodeResp) {
                            $('.location-map__list').empty();
                            $('.location-map__list').append('<li class="location-map__option active js-exact-location"><?= Yii::t('app', 'Exact Location') ?></li>');
                            $('.location-map__list li:last-child').attr('data-response', JSON.stringify({
                                country_abbreviation: reverseGeocodeResp[0].Address.CountryAbbreviation,
                                state_abbreviation: reverseGeocodeResp[0].Address.StateAbbreviation,
                                city: reverseGeocodeResp[0].Address.City,
                                zip: reverseGeocodeResp[0].Address.Zip,
                                address: reverseGeocodeResp[0].Address.StreetAddress,
                                lon: marker.getLngLat().lng,
                                lat: marker.getLngLat().lat,
                            }));
                            $('.location-map__list').append('<li class="location-map__option-label"><?= Yii::t('app', 'OR SUGGESTED ADDRESS') ?></li>');
                            $(".location-map").css('opacity', '1');
                        } else {
                            $('.location-map__option').not('.js-exact-location').remove();
                            $(".location-map").css('opacity', '1');
                        }
                        $.each(response, function (index, value) {
                            $('.location-map__list').append('<li class="location-map__option">' + value.address + '</li>');
                            $('.location-map__list li:last-child').attr('data-response', JSON.stringify(value));
                            $(".location-map").css('opacity', '1');
                        });
                    });
                };
                var myMapParent = $('#myMap').closest('.locationMap');
                myMapParent.removeClass('d-none');
                setTimeout(() => {
                    TrimbleMaps.APIKey = "<?= Yii::$app->pcmiler->apiKey ?>";

                    var myMap = new TrimbleMaps.Map({
                        container: "myMap",
                        center: new TrimbleMaps.LngLat(-96, 35),
                        zoom: 3.3
                    });

                    var marker = new TrimbleMaps.Marker();
                    var markerAdded = false;
                    setMarker = function (d) {
                        myMap.setCenter(d);
                        marker.setLngLat(d);
                        if (!markerAdded) {
                            marker.addTo(myMap);
                            markerAdded = true;
                        }
                    };
                    myMap.on('click', function (e) {
                        var d = e.lngLat;
                        setMarker(d);
                        var reverseGeocodeLocation = TrimbleMaps.Geocoder.reverseGeocode({
                            lonLat: new TrimbleMaps.LngLat(d.lng, d.lat),
                            region: TrimbleMaps.Common.Region.NA,
                            success: function (response) {
                                // console.log(response);
                                var params = 'query=' + response[0].Address.StreetAddress + '&currentLonLat=' + d.lng + ',' + d.lat;
                                if (response[0].Address.CountryAbbreviation) {
                                    params = params + '&countries=' + response[0].Address.CountryAbbreviation;
                                    if (response[0].Address.StateAbbreviation) {
                                        params = params + '&states=' + response[0].Address.StateAbbreviation;
                                    }
                                }
                                if (typeof saRequest != 'undefined') {
                                    saRequest.abort();
                                }
                                saRequest = suggestedAddress(params, response);
                            },
                            failure: function (response) {
                                // console.log(response);
                            }
                        });
                    });

                    var nav = new TrimbleMaps.NavigationControl({showCompass: false});
                    myMap.addControl(nav, 'top-left');
                    myMapParent.addClass('d-none');
                }, 300);
            </script>
        </div>
    </div>
<?php
ActiveForm::end();
